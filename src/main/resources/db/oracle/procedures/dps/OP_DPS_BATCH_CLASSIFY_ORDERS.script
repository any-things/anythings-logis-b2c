create or replace PROCEDURE OP_DPS_BATCH_CLASSIFY_ORDERS
/***********************************************************************************/
/*  프로시져 이름 : OP_DPS_BATCH_CLASSIFY_ORDERS
/*  프로시져 호출 서비스 : 
/*  프로시져 설명 : 배치 ID의 주문 정보를 전체 검색해 주문 유형 타입을 결정 (주문 대상 분류)
/*  프로시져 로직 
/*    1. 상위 시스템 대상 분류 여부 확인
/*    2. 상위 시스템에서 대상 분류한 작업이면
/*      2.1. 대상 분류 건수 리턴
/*    3. 단포 사용 옵션 체크 - 단포 작업 타입은 OT
/*    4. 배치 ID로 부터 주문정보를 검색 loop ORDER_TYPE
/*  생성일시 : 2020-11-10
/*  작성자 : 양우람
/*  개정 이력
/*    1. 2020-11-10 : 최초 작성
/***********************************************************************************/
(
    /* 도메인 ID */
    P_IN_DOMAIN_ID                IN  NUMBER,
    /* 배치 ID */
    P_IN_BATCH_ID                 IN  VARCHAR2,
    /* 단포 작업 활성 여부 */
    P_IN_SINGLE_PACK              IN NUMBER,

    /* 합포 주문수  */
    P_OUT_MT_COUNT                OUT NUMBER,
    /* 단포 주문수 */
    P_OUT_OT_COUNT                OUT NUMBER,
    /* 결과 코드 */
    P_OUT_RESULT_CODE             OUT NUMBER,     -- (0 : 정상 종료, -20999 : 비정상 종료) 
    /* 결과 메시지 */
    P_OUT_MESSAGE                 OUT VARCHAR2    -- (OK : 정상 종료, etc : 종료 메시지 or 오류 메시지)
) 
IS
    /* 프로시저 내부에서 사용할 체크 카운트 */
    V_CHECK_CNT NUMBER;
    /* JOBBATCH */
    V_BATCH JOB_BATCHES%rowtype;
    /* 옵션 및 조건에 따라 단포 작업을 분류할 타입 */
    V_OT_ORDER_TYPE VARCHAR2(2) := 'OT';

    V_MT_COUNT NUMBER := 0;
    V_OT_COUNT NUMBER := 0;

BEGIN
    -- 배치 조회 
    V_BATCH := OF_GET_JOB_BATCH(P_IN_DOMAIN_ID, P_IN_BATCH_ID);

    -- 1. 상위 시스템 대상 분류 여부 확인 
    SELECT COUNT(1)
      INTO V_CHECK_CNT
      FROM ORDERS
     WHERE DOMAIN_ID = P_IN_DOMAIN_ID
       AND BATCH_ID = V_BATCH.ID
       AND ORDER_TYPE IS NOT NULL
       AND ROWNUM = 1;

    -- 2. 상위 시스템에서 대상 분류 한 작업 이면 
    IF (V_CHECK_CNT = 1 ) THEN 
        -- 2.1. 대상분류 cnt 
        SELECT COUNT(1) 
          INTO V_MT_COUNT
          FROM (
                SELECT 1
                  FROM ORDERS
                 WHERE DOMAIN_ID = P_IN_DOMAIN_ID
                   AND BATCH_ID = V_BATCH.ID
                   AND ORDER_TYPE = 'MT'
                 GROUP BY DOMAIN_ID,BATCH_ID,CLASS_CD
               );

        SELECT COUNT(1) 
          INTO V_OT_COUNT
          FROM (
                SELECT 1
                  FROM ORDERS
                 WHERE DOMAIN_ID = P_IN_DOMAIN_ID
                   AND BATCH_ID = V_BATCH.ID
                   AND ORDER_TYPE = 'OT'
                 GROUP BY DOMAIN_ID,BATCH_ID,CLASS_CD
               );


        /* UPDATE ORDER_TYPE  */
        UPDATE ORDERS 
           SET STATUS = 'T'
             , UPDATED_AT = SYSDATE
         WHERE DOMAIN_ID = P_IN_DOMAIN_ID
           AND BATCH_ID = V_BATCH.ID;

        -- 정상 처리 
        P_OUT_RESULT_CODE := 0;
        P_OUT_MESSAGE := 'OK';
        P_OUT_MT_COUNT := V_MT_COUNT;
        P_OUT_OT_COUNT := V_OT_COUNT;

        RETURN;
    END IF;

    -- 3. 단포 사용 옵션이 true 작업 타입은 OT 
    IF ( P_IN_SINGLE_PACK = 1 ) THEN
        V_OT_ORDER_TYPE := 'OT';
    ELSE 
        V_OT_ORDER_TYPE := 'MT';
    END IF;

    -- 4. 배치 ID 로 부터 주문정보를 검색 loop 
    FOR TEMP_ORDERS IN (
        SELECT DOMAIN_ID, BATCH_ID, CLASS_CD, DECODE(COUNT(1) , 1, V_OT_ORDER_TYPE, 'MT') AS ORDER_TYPE
          FROM (
                SELECT DOMAIN_ID, BATCH_ID, CLASS_CD, COM_CD, SKU_CD
                  FROM ORDERS
                 WHERE DOMAIN_ID = P_IN_DOMAIN_ID
                   AND BATCH_ID = V_BATCH.ID
                 GROUP BY DOMAIN_ID, BATCH_ID, CLASS_CD, COM_CD, SKU_CD
               )
         GROUP BY DOMAIN_ID, BATCH_ID, CLASS_CD
    ) LOOP

        /* 수량 셋 */ 
        IF(TEMP_ORDERS.ORDER_TYPE = 'MT') THEN V_MT_COUNT := V_MT_COUNT +1;
        ELSE V_OT_COUNT := V_OT_COUNT +1;
        END IF;

        /* UPDATE ORDER_TYPE  */
        UPDATE ORDERS 
           SET ORDER_TYPE = TEMP_ORDERS.ORDER_TYPE
             , STATUS = 'T'
             , UPDATED_AT = SYSDATE
         WHERE DOMAIN_ID = TEMP_ORDERS.DOMAIN_ID
           AND BATCH_ID = TEMP_ORDERS.BATCH_ID
           AND CLASS_CD = TEMP_ORDERS.CLASS_CD;

    END LOOP;


    -- 정상 처리 
    P_OUT_RESULT_CODE := 0;
    P_OUT_MESSAGE := 'OK';
    P_OUT_MT_COUNT := V_MT_COUNT;
    P_OUT_OT_COUNT := V_OT_COUNT;

EXCEPTION
    WHEN OTHERS THEN
        P_OUT_RESULT_CODE := SQLCODE;

        -- 개발자 에러 코드의 경우 메시지만 return
        IF SQLCODE = -20999 THEN
            P_OUT_MESSAGE := LTRIM(SUBSTR(SQLERRM, 11, 200));
        ELSE 
            -- 오라클 자체 에러인 경우 전체 메시지 리턴 
            P_OUT_MESSAGE := SUBSTR(SQLERRM, 1, 200);
            RAISE;
        END IF;

END OP_DPS_BATCH_CLASSIFY_ORDERS;
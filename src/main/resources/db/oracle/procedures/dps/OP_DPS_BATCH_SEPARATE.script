create or replace PROCEDURE OP_DPS_BATCH_SEPARATE
/***********************************************************************************/
/*  프로시져 이름 : OP_DPS_BATCH_SEPARATE
/*  프로시져 호출 서비스 : 
/*  프로시져 설명 : DPS 배치 분할 
/*              상위 시스템에서 배치에 실행 대상 Rack 이 지정되어 수신이 되는 경우
/*              배치를 분할 한다. 
/*  프로시져 로직 
/*    1. 상위 시스템에서 지정된 Rack 의 경우에는 배치를 분할 
/*       1.1. 기존 배치는 update
/*       1.2. 신규 배치는 생성 
/*       1.3. 주문 데이터 분리 
/*       1.4. Rack 에 배치 지정 
/*  생성일시 : 2020-02-13
/*  작성자 : 양우람 
/*  개정 이력
/*    1. 2020-02-13 : 최초 작성
/***********************************************************************************/
(
    /* 도메인 ID */
    P_IN_DOMAIN_ID                IN NUMBER,
    /* 배치 ID */
    P_IN_BATCH_ID                 IN VARCHAR2,

    /* 결과 코드 */
    P_OUT_RESULT_CODE             OUT NUMBER,     -- (0 : 정상 종료, -20999 : 비정상 종료) 
    /* 결과 메시지 */
    P_OUT_MESSAGE                 OUT VARCHAR2    -- (OK : 정상 종료, etc : 종료 메시지 or 오류 메시지)
) 
IS
    /* JOBBATCH */
    V_BATCH JOB_BATCHES%rowtype;

    /* 배치 분할시 배치 ID */
    V_BATCH_ID VARCHAR2(40);

BEGIN
    -- 배치 조회 
    V_BATCH := OF_GET_JOB_BATCH(P_IN_DOMAIN_ID, P_IN_BATCH_ID);

    -- 1. 상위 시스템에서 지정된 Rack 의 경우에는 배치를 분할 
    FOR TEMP_BATCHES IN (
        SELECT X.DOMAIN_ID, X.BATCH_ID
             , X.AREA_CD, X.STAGE_CD
             , X.EQUIP_TYPE, X.EQUIP_CD, Y.RACK_NM AS EQUIP_NM
             , COUNT(DISTINCT(CLASS_CD)) AS BATCH_ORDER_QTY
             , SUM(ORDER_QTY) AS BATCH_PCS
             , RANK() OVER (ORDER BY X.EQUIP_CD ) AS RANK_NUM
          FROM ORDERS X
             , (SELECT DOMAIN_ID, AREA_CD, STAGE_CD,RACK_CD,RACK_NM
                  FROM RACKS
                 WHERE DOMAIN_ID = P_IN_DOMAIN_ID
                   AND AREA_CD = V_BATCH.AREA_CD
                   AND STAGE_CD = V_BATCH.STAGE_CD) Y
         WHERE X.DOMAIN_ID = Y.DOMAIN_ID
           AND X.AREA_CD = Y.AREA_CD
           AND X.STAGE_CD = Y.STAGE_CD
           AND X.EQUIP_CD = Y.RACK_CD 
           AND X.DOMAIN_ID = P_IN_DOMAIN_ID
           AND X.AREA_CD = V_BATCH.AREA_CD
           AND X.STAGE_CD = V_BATCH.STAGE_CD
           AND X.BATCH_ID = V_BATCH.ID
         GROUP BY X.DOMAIN_ID, X.BATCH_ID
                , X.AREA_CD, X.STAGE_CD
                , X.EQUIP_TYPE, X.EQUIP_CD, Y.RACK_NM
    ) LOOP
    
        IF ( TEMP_BATCHES.RANK_NUM = 1 ) THEN
            -- 1.1. 기존 배치는 update
            UPDATE JOB_BATCHES
               SET EQUIP_CD = TEMP_BATCHES.EQUIP_CD
                 , EQUIP_NM = TEMP_BATCHES.EQUIP_NM
                 , BATCH_ORDER_QTY = TEMP_BATCHES.BATCH_ORDER_QTY
                 , BATCH_PCS = TEMP_BATCHES.BATCH_PCS
             WHERE ID = TEMP_BATCHES.BATCH_ID;
             
             V_BATCH_ID := TEMP_BATCHES.BATCH_ID;
             
        ELSE 
            -- 1.2. 신규 배치는 생성 
            INSERT INTO JOB_BATCHES (ID, WMS_BATCH_NO, BATCH_GROUP_ID
                                    , COM_CD, JOB_TYPE, JOB_DATE, JOB_SEQ
                                    , AREA_CD, EQUIP_TYPE, EQUIP_CD, EQUIP_NM
                                    , BATCH_ORDER_QTY, BATCH_PCS
                                    , STATUS, DOMAIN_ID
                                    , JOB_CONFIG_SET_ID, IND_CONFIG_SET_ID
                                    , CREATOR_ID, UPDATER_ID, CREATED_AT, UPDATED_AT)
            SELECT OF_GET_GENERATE_BATCH_ID(P_IN_DOMAIN_ID), V_BATCH.WMS_BATCH_NO , V_BATCH.BATCH_GROUP_ID
                 , V_BATCH.COM_CD, V_BATCH.JOB_TYPE, V_BATCH.JOB_DATE, V_BATCH.JOB_SEQ
                 , V_BATCH.AREA_CD, V_BATCH.EQUIP_TYPE, TEMP_BATCHES.EQUIP_CD, TEMP_BATCHES.EQUIP_NM
                 , TEMP_BATCHES.BATCH_ORDER_QTY, TEMP_BATCHES.BATCH_PCS
                 , V_BATCH.STATUS, V_BATCH.DOMAIN_ID
                 , V_BATCH.JOB_CONFIG_SET_ID, V_BATCH.IND_CONFIG_SET_ID
                 , 'PROC', 'PROC', SYSDATE, SYSDATE
              FROM DUAL;
              
            V_BATCH_ID := TEMP_BATCHES.BATCH_ID;
            
            -- 1.3. 주문 데이터 분리 
            UPDATE ORDERS
               SET BATCH_ID = V_BATCH_ID
                 , EQUIP_NM = TEMP_BATCHES.EQUIP_NM
                 , UPDATED_AT = SYSDATE
             WHERE DOMAIN_ID = P_IN_BATCH_ID
               AND BATCH_ID = V_BATCH.ID
               AND EQUIP_CD = TEMP_BATCHES.EQUIP_CD;

        END IF;
        
        -- 1.4 Rack 에 배치 지정 
        UPDATE RACKS 
           SET BATCH_ID = V_BATCH_ID
             , UPDATED_AT = SYSDATE
         WHERE DOMAIN_ID = V_BATCH.DOMAIN_ID
           AND AREA_CD = V_BATCH.AREA_CD
           AND STAGE_CD = V_BATCH.STAGE_CD
           AND RACK_CD = V_BATCH.EQUIP_CD
           AND (BATCH_ID IS NULL OR BATCH_ID = ''); -- 병합의 경우에 기존 에 진행중인 배치에 대한 저옵 유지.

    END LOOP;

    -- 정상 처리 
    P_OUT_RESULT_CODE := 0;
    P_OUT_MESSAGE := 'OK';

EXCEPTION
    WHEN OTHERS THEN
        P_OUT_RESULT_CODE := SQLCODE;

        -- 개발자 에러 코드의 경우 메시지만 return
        IF SQLCODE = -20999 THEN
            P_OUT_MESSAGE := LTRIM(SUBSTR(SQLERRM, 11, 200));
        ELSE 
            -- 오라클 자체 에러인 경우 전체 메시지 리턴 
            P_OUT_MESSAGE := SUBSTR(SQLERRM, 1, 200);
            RAISE;
        END IF;

END OP_DPS_BATCH_SEPARATE;